plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "1.0.6"
}

group = 'cat.nyaa'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name 'NyaaCat'
        url 'https://ci.nyaacat.com/maven/'
    }
    maven {
        name 'aikar';
        url 'https://repo.aikar.co/content/groups/aikar/'
    }

}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.18.1-R0.1-SNAPSHOT'
    if (gradle.hasProperty("useLocalDependencies") && gradle.useLocalDependencies) {
        compileOnly project(":NyaaCore")
        compileOnly project(":aolib")
    } else {
        compileOnly('cat.nyaa:aolib:1.0.6')
        compileOnly('cat.nyaa:nyaacore:9.0-SNAPSHOT')
    }

    compileOnly 'org.jetbrains:annotations:22.0.0'
    implementation 'com.zaxxer:HikariCP:5.0.1'

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


runServer {
    // Configure the Minecraft version for our task.
    // This is the only required configuration besides applying the plugin.
    // Your plugin's jar (or shadowJar if present) will be used automatically.
    minecraftVersion("1.18.1")
}